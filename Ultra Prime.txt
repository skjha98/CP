#include <iostream>
#include <bits/stdc++.h> 
using namespace std;

vector <bool> is_prime(1e6+1, true);
vector <bool> is_great_prime;

int digitsum(int n){
    int sum=0;
    while(n){
        sum+=n%10;
        n/=10;
    }
    return sum;
}

void precompute() {
    is_prime[0] = is_prime[1] = false;
    for(long long int i = 2; i<1e6+1; i++){
        if(is_prime[i]){
            for(long long int itr=2*i; itr<1e6+1; itr+=i){
                is_prime[itr]=false;
            }
        }
    }
    is_great_prime = is_prime;
    is_great_prime[0] = is_great_prime[1] = false;
    for(long long int i = 2; i<1e6+1; i++){
        if(is_prime[i] && !is_prime[digitsum(i)]){
            is_great_prime[i]=false;
        }
    }
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    precompute();
    long long int n, l, r, count =0;
    cin >> n;
    while(n--){
        count = 0;
        cin >> l;
        cin >> r;
        for(int i = l; i<=r; i++){
            if(is_great_prime[i]){
                //if(is_prime[digitsum(i)]){
                    //cout << i << " ";
                    count++;
                //}
            }
        }
        cout << count << "\n";
    }
    return 0;
}